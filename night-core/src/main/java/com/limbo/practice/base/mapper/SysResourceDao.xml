<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.limbo.practice.base.dao.SysResourceDao">

    <resultMap id="BaseResultMap" type="com.limbo.practice.base.entity.SysResource">
        <id property="id" column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
        <result property="parentId" column="parent_id" javaType="java.lang.Long" jdbcType="BIGINT" />
        <result property="name" column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="url" column="url" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="urlType" column="url_type" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="type" column="type" javaType="com.limbo.practice.core.enums.ResourceTypeEnum" typeHandler="com.limbo.practice.core.mybatis.BaseEnumMybatisHandler" jdbcType="BIT" />
        <result property="route" column="route" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="sort" column="sort" javaType="Integer" jdbcType="TINYINT" />
        <result property="parents" column="parents" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="description" column="description" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="autoGeneration" column="is_auto_generation" javaType="java.lang.Boolean" jdbcType="BIT" />
        <result property="deleted" column="is_deleted" javaType="java.lang.Boolean" jdbcType="BIT" />
        <result property="gmtCreate" column="gmt_create" javaType="java.util.Date" jdbcType="DATE" />
        <result property="gmtModified" column="gmt_modified" javaType="java.util.Date" jdbcType="DATE" />
    </resultMap>

    <sql id="Base_Column_List">
        `id`,
        parent_id,
        name,
        url,
        url_type,
        type,
        route,
        sort,
        parents,
        description,
        is_auto_generation,
        is_deleted,
        gmt_create,
        gmt_modified
    </sql>

    <sql id="Base_Where_List">
        <where>
        <if test="id != null and id != '' ">
            AND id = #{id, jdbcType=BIGINT}
        </if>
        <if test="ids != null and ids.size() > 0">
            AND id in
            <foreach collection="ids" open="(" separator="," close=")" item="id">
                #{id, jdbcType=BIGINT}
            </foreach>
        </if>
        <if test="parentId != null and parentId != '' ">
            AND parent_id = #{parentId, jdbcType=BIGINT}
        </if>
        <if test="name != null and name != '' ">
            AND name = #{name, jdbcType=VARCHAR}
        </if>
        <if test="url != null and url != '' ">
            AND url = #{url, jdbcType=VARCHAR}
        </if>
        <if test="urlType != null and urlType != '' ">
            AND url_type = #{urlType, jdbcType=VARCHAR}
        </if>
        <if test="type != null and type != '' ">
            AND type = #{type, typeHandler=com.limbo.practice.core.mybatis.BaseEnumMybatisHandler}
        </if>
        <if test="types != null and types.size() > 0">
            AND type in
            <foreach collection="types" open="(" separator="," close=")" item="type">
                #{type, typeHandler=com.limbo.practice.core.mybatis.BaseEnumMybatisHandler}
            </foreach>
        </if>
        <if test="route != null and route != '' ">
            AND route = #{route, jdbcType=VARCHAR}
        </if>
        <if test="sort != null and sort != '' ">
            AND sort = #{sort, jdbcType=TINYINT}
        </if>
        <if test="parents != null and parents != '' ">
            AND parents = #{parents, jdbcType=VARCHAR}
        </if>
        <if test="description != null and description != '' ">
            AND description = #{description, jdbcType=VARCHAR}
        </if>
        <if test="autoGeneration != null and autoGeneration != '' ">
            AND is_auto_generation = #{autoGeneration, jdbcType=BIT}
        </if>
        <if test="deleted != null and deleted != '' ">
            AND is_deleted = #{deleted, jdbcType=BIT}
        </if>
        <if test="gmtCreate != null and gmtCreate != '' ">
            AND gmt_create = #{gmtCreate, jdbcType=DATE}
        </if>
        <if test="gmtModified != null and gmtModified != '' ">
            AND gmt_modified = #{gmtModified, jdbcType=DATE}
        </if>
        </where>
    </sql>
    
    <select id="getById" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM sys_resource
        WHERE id = #{id, jdbcType=BIGINT}
    </select>
    
    <select id="get" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM sys_resource
        <include refid="Base_Where_List"/>
        LIMIT 1
    </select>
    
    <select id="list" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM sys_resource
        <include refid="Base_Where_List"/>
    </select>
    
    <insert id="insert" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
        INSERT IGNORE INTO sys_resource(
            id ,
            parent_id ,
            name ,
            url ,
            url_type ,
            type ,
            route ,
            sort ,
            parents ,
            description ,
            is_auto_generation ,
            is_deleted ,
            gmt_create ,
            gmt_modified 
        ) VALUES (
            #{id, jdbcType=BIGINT} ,
            #{parentId, jdbcType=BIGINT} ,
            #{name, jdbcType=VARCHAR} ,
            #{url, jdbcType=VARCHAR} ,
            #{urlType, jdbcType=VARCHAR} ,
            #{type, typeHandler=com.limbo.practice.core.mybatis.BaseEnumMybatisHandler} ,
            #{route, jdbcType=VARCHAR} ,
            #{sort, jdbcType=TINYINT} ,
            #{parents, jdbcType=VARCHAR} ,
            #{description, jdbcType=VARCHAR} ,
            #{autoGeneration, jdbcType=BIT} ,
            #{deleted, jdbcType=BIT} ,
            #{gmtCreate, jdbcType=DATE} ,
            #{gmtModified, jdbcType=DATE} 
        )
    </insert>

    <insert id="insertBatch">
        INSERT IGNORE INTO sys_resource(
            id ,
            parent_id ,
            name ,
            url ,
            url_type ,
            type ,
            route ,
            sort ,
            parents ,
            description ,
            is_auto_generation ,
            is_deleted ,
            gmt_create ,
            gmt_modified 
        ) VALUES
        <foreach collection="beans" open="(" close=")"  item="bean" separator="),(">
            #{bean.id, jdbcType=BIGINT} ,
            #{bean.parentId, jdbcType=BIGINT} ,
            #{bean.name, jdbcType=VARCHAR} ,
            #{bean.url, jdbcType=VARCHAR} ,
            #{bean.urlType, jdbcType=VARCHAR} ,
            #{bean.type, jdbcType=BIT} ,
            #{bean.route, jdbcType=VARCHAR} ,
            #{bean.sort, jdbcType=TINYINT} ,
            #{bean.parents, jdbcType=VARCHAR} ,
            #{bean.description, jdbcType=VARCHAR} ,
            #{bean.autoGeneration, jdbcType=BIT} ,
            #{bean.deleted, jdbcType=BIT} ,
            #{bean.gmtCreate, jdbcType=DATE} ,
            #{bean.gmtModified, jdbcType=DATE} 
        </foreach>
    </insert>
    
    <update id="update">
        UPDATE sys_resource SET 
            parent_id = #{parentId, jdbcType=BIGINT} ,
            name = #{name, jdbcType=VARCHAR} ,
            url = #{url, jdbcType=VARCHAR} ,
            url_type = #{urlType, jdbcType=VARCHAR} ,
            type = #{type, typeHandler=com.limbo.practice.core.mybatis.BaseEnumMybatisHandler} ,
            route = #{route, jdbcType=VARCHAR} ,
            sort = #{sort, jdbcType=TINYINT} ,
            parents = #{parents, jdbcType=VARCHAR} ,
            description = #{description, jdbcType=VARCHAR} ,
            is_auto_generation = #{autoGeneration, jdbcType=BIT} ,
            is_deleted = #{deleted, jdbcType=BIT} ,
            gmt_create = #{gmtCreate, jdbcType=DATE} ,
            gmt_modified = #{gmtModified, jdbcType=DATE} 
        WHERE id = #{id, jdbcType=BIGINT}
    </update>

    <update id="updateActive">
        UPDATE sys_resource SET
        <if test="parentId != null and parentId != '' ">
            parent_id = #{parentId, jdbcType=BIGINT} ,
        </if>
        <if test="name != null and name != '' ">
            name = #{name, jdbcType=VARCHAR} ,
        </if>
        <if test="url != null and url != '' ">
            url = #{url, jdbcType=VARCHAR} ,
        </if>
        <if test="urlType != null and urlType != '' ">
            url_type = #{urlType, jdbcType=VARCHAR} ,
        </if>
        <if test="type != null and type != '' ">
            type = #{type, typeHandler=com.limbo.practice.core.mybatis.BaseEnumMybatisHandler} ,
        </if>
        <if test="route != null and route != '' ">
            route = #{route, jdbcType=VARCHAR} ,
        </if>
        <if test="sort != null and sort != '' ">
            sort = #{sort, jdbcType=TINYINT} ,
        </if>
        <if test="parents != null and parents != '' ">
            parents = #{parents, jdbcType=VARCHAR} ,
        </if>
        <if test="description != null and description != '' ">
            description = #{description, jdbcType=VARCHAR} ,
        </if>
        <if test="autoGeneration != null and autoGeneration != '' ">
            is_auto_generation = #{autoGeneration, jdbcType=BIT} ,
        </if>
        <if test="deleted != null and deleted != '' ">
            is_deleted = #{deleted, jdbcType=BIT} ,
        </if>
        <if test="gmtCreate != null and gmtCreate != '' ">
            gmt_create = #{gmtCreate, jdbcType=DATE} ,
        </if>
        gmt_modified = NOW()
        WHERE id = #{id, jdbcType=BIGINT}
    </update>
    
    <update id="logicDelete">
        UPDATE sys_resource SET
            is_deleted = "1"
        WHERE id = #{id, jdbcType=BIGINT}
    </update>
    
    <delete id="delete">
        DELETE FROM sys_resource
        WHERE id = #{id, jdbcType=BIGINT}
    </delete>

    <delete id="deleteByPid">
        DELETE FROM sys_resource WHERE parent_id = #{pid, jdbcType=BIGINT} OR parents LIKE CONCAT('%,', #{pid, jdbcType=BIGINT}, ',%')
    </delete>

    <select id="selectChildAndSelfById" parameterType="Long" resultType="Long">
        SELECT `id` FROM sys_resource WHERE id = #{id, jdbcType=BIGINT} OR parent_id = #{id, jdbcType=BIGINT} OR parents LIKE CONCAT('%,', #{id, jdbcType=BIGINT}, ',%')
    </select>
</mapper>