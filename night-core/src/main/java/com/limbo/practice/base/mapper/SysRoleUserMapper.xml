<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.limbo.practice.base.dao.SysRoleUserMapper">
  <resultMap id="BaseResultMap" type="com.limbo.practice.base.entity.SysRoleUser">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <idArg column="role_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <idArg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="is_deleted" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="gmt_create" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="gmt_modified" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, role_id, user_id, is_deleted, gmt_create, gmt_modified
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.limbo.practice.base.entity.SysRoleUserKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role_user
    where id = #{id,jdbcType=BIGINT}
      and role_id = #{roleId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.limbo.practice.base.entity.SysRoleUserKey">
    delete from sys_role_user
    where id = #{id,jdbcType=BIGINT}
      and role_id = #{roleId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.limbo.practice.base.entity.SysRoleUser">
    insert into sys_role_user (id, role_id, user_id, 
      is_deleted, gmt_create, gmt_modified
      )
    values (#{id,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{isDeleted,jdbcType=BIT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.limbo.practice.base.entity.SysRoleUser">
    insert into sys_role_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.limbo.practice.base.entity.SysRoleUser">
    update sys_role_user
    <set>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
      and role_id = #{roleId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.limbo.practice.base.entity.SysRoleUser">
    update sys_role_user
    set is_deleted = #{isDeleted,jdbcType=BIT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
      and role_id = #{roleId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.limbo.practice.base.entity.SysRoleUser">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <idArg column="role_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <idArg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="is_deleted" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="gmt_create" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="gmt_modified" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, role_id, user_id, is_deleted, gmt_create, gmt_modified
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.limbo.practice.base.entity.SysRoleUserKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role_user
    where id = #{id,jdbcType=BIGINT}
      and role_id = #{roleId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.limbo.practice.base.entity.SysRoleUserKey">
    delete from sys_role_user
    where id = #{id,jdbcType=BIGINT}
      and role_id = #{roleId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.limbo.practice.base.entity.SysRoleUser">
    insert into sys_role_user (id, role_id, user_id, 
      is_deleted, gmt_create, gmt_modified
      )
    values (#{id,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{isDeleted,jdbcType=BIT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.limbo.practice.base.entity.SysRoleUser">
    insert into sys_role_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.limbo.practice.base.entity.SysRoleUser">
    update sys_role_user
    <set>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
      and role_id = #{roleId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.limbo.practice.base.entity.SysRoleUser">
    update sys_role_user
    set is_deleted = #{isDeleted,jdbcType=BIT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
      and role_id = #{roleId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>